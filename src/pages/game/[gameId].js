import React, { useEffect, useState } from "react";

import Head from "next/head";
import MainLayout from "@/layouts/MainLayout";

import GameDetailGrid from "@/components/ui/GameDetailGrid";
import GameCategoryGrid from "@/components/ui/GameCategoryGrid";
import {
  getAllCategories,
  getGameByCategoryId,
  getGameDetailById,
  getGameDetailBySlug,
  getHallOfFameByGameId,
} from "@/services/game.service";
import { useRouter } from "next/router";
import { isEmpty, notifyErrorMessage } from "@/utils/helper";
import { useToast } from "@chakra-ui/react";
import { useDispatch, useSelector } from "react-redux";
import { useApi } from "@/hooks/useApi";

const HALL_OF_FAME_LIMIT = 10;

const GameDetail = () => {
  const router = useRouter();
  const toast = useToast();
  const dispatch = useDispatch();

  const { call } = useApi();

  const [params, setParams] = useState();

  const { categories } =
    useSelector(({ game: { gameIndex } }) => gameIndex) ?? {};

  const handleGetGameDetailData = async () => {
    try {
      const { data } =
        (await getGameDetailById(dispatch, params?.gameId)) ?? {};
      if (!data) router.push("/404");

      const { game_category } = data ?? {};

      if (!game_category?.id) return;
      await getGameByCategoryId(dispatch, game_category?.id);
    } catch (error) {
      notifyErrorMessage(toast, error);
    }
  };

  useEffect(() => {
    if (!params || isEmpty(params)) return;

    Promise.all([
      handleGetGameDetailData(),
      call(getAllCategories(dispatch)),
      call(getHallOfFameByGameId(dispatch, params?.gameId, HALL_OF_FAME_LIMIT)),
    ]);
  }, [params]);

  useEffect(() => {
    setParams(router.query);
  }, [router]);

  return (
    <>
      <Head>
        <title>Game detail</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainLayout>
        <div className="w-min">
          <GameDetailGrid />
          <GameCategoryGrid categories={categories} />
        </div>
      </MainLayout>
    </>
  );
};

export default GameDetail;

export async function getStaticProps() {
  return {
    props: {},
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true, // can also be true or 'blocking'
  };
}
