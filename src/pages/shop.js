import React, { useEffect, useState } from "react";

import Head from "next/head";

import MainLayout from "@/layouts/MainLayout";

import { Checkbox, useToast } from "@chakra-ui/react";

import { SHOP_TAB, STATUS } from "@/utils/constant";

import AvatarItem from "@/components/shop/AvatarItem";
import CoverPageItem from "@/components/shop/CoverPageItem";
import Empty from "@/components/empty/Empty";
import PlayTimeItem from "@/components/shop/PlayTimeItem";

import { useAuthContext } from "@/context/auth-context";
import { useModalContext } from "@/context/modal-context";

import { IconCoin, IconPlus } from "@/resources/icons";

import { getCategoriesShop, getItemByCategory } from "@/services/shop.service";

import { notifyErrorMessage } from "@/utils/helper";

const Shop = () => {
  const { status } = useModalContext();
  const { userInfo } = useAuthContext();
  const { zera } = userInfo || {};
  const toast = useToast();

  const [idCategory, setIdCategory] = useState("");
  const [tab, setTab] = useState(SHOP_TAB.AVATAR);
  const [categories, setCategories] = useState([]);
  const [itemsShop, setItemsShop] = useState();

  const getItem = async (idCategory) => {
    try {
      const { data } = await getItemByCategory(idCategory);
      if (!data) return;
      setItemsShop(data?.rows);
    } catch (e) {
      notifyErrorMessage(toast, e);
    }
  };

  const getTabShop = async () => {
    const { data } = await getCategoriesShop();
    setCategories(data);
  };

  useEffect(() => {
    getTabShop();
  }, []);

  useEffect(() => {
    if (!idCategory) return;
    getItem(idCategory);
  }, [idCategory]);

  useEffect(() => {
    getItem(idCategory);
  }, [status == STATUS.SUCCESS]);

  useEffect(() => {
    if (categories) {
      setIdCategory(categories[0]?.id);
    }
  }, [categories]);

  return (
    <>
      <Head>
        <title>Simple Shop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainLayout>
        {/* content  */}
        <div className="w-[1000px]">
          <div className="text-white bg-blur-800 border-[5px] border-violet-400 p-[62px] pt-2.5 rounded-[20px]">
            {/* title */}
            <div className="bg-pink-800 rounded-[20px] mx-auto py-2.5 text-[40px] text-center font-bold w-[280px] mb-[58px]">
              Simple Shop
            </div>

            {/* tab */}
            <div className="flex gap-3 justify-center relative">
              {categories?.map((category, i) => (
                <div
                  key={i}
                  onClick={() => {
                    setTab(category?.name);
                    setIdCategory(category?.id);
                  }}
                  className={`${
                    category?.name === tab
                      ? "bg-pink-800 text-white border border-pink-500"
                      : "bg-violet-900 text-[#ffffffb3] border border-violet-500"
                  } text-center text-base font-bold rounded-t-[20px] w-[120px]  border-b-0 py-2.5 cursor-pointer`}
                >
                  {category?.name}
                </div>
              ))}

              <div className="absolute right-0 top-[-13px] h-fit px-[10px] py-[3px] flex items-center content-center bg-[#4C1D95] rounded-[10px] shadow-[0px_4px_4px_rgba(0,0,0,0.25)] cursor-pointer">
                <p className=" font-black text-[24px] mr-[5px]">{zera}</p>
                <IconCoin className="mr-[10px]" />
                <IconPlus />
              </div>
            </div>

            {/* content */}
            <div className="pt-[18px] px-[54px] pb-[26px] border-[5px] border-pink-500 bg-[#5b21b666] rounded-[30px]">
              {/* checkbox */}
              <div className="flex gap-4 justify-end mb-[26px]">
                <Checkbox colorScheme="pink" defaultChecked>
                  All
                </Checkbox>
                <Checkbox colorScheme="pink" defaultChecked>
                  Buy
                </Checkbox>
                <Checkbox colorScheme="pink" defaultChecked>
                  Owned
                </Checkbox>
              </div>

              {/* list item  */}
              {itemsShop?.length ? (
                <>
                  {tab === SHOP_TAB.AVATAR ? (
                    <div
                      className="grid grid-cols-1 justify-center
                  min-[990px]:grid-cols-2 min-[1248px]:grid-cols-3 min-[1540px]:grid-cols-4 gap-4"
                    >
                      {itemsShop?.map((e, i) => (
                        <AvatarItem tab={tab} item={e} key={i} />
                      ))}
                    </div>
                  ) : tab === SHOP_TAB.COVER_PAGE ? (
                    <div className="grid grid-cols-1 min-[1248px]:grid-cols-2 gap-4">
                      {itemsShop?.map((e, i) => (
                        <CoverPageItem tab={tab} item={e} key={i} />
                      ))}
                    </div>
                  ) : tab === SHOP_TAB.PLAYTIMES ? (
                    <div
                      className="grid grid-cols-1 justify-center
                  min-[990px]:grid-cols-2 min-[1248px]:grid-cols-3 min-[1540px]:grid-cols-4 gap-4"
                    >
                      {itemsShop?.map((e, i) => (
                        <PlayTimeItem tab={tab} item={e} key={i} />
                      ))}
                    </div>
                  ) : null}
                </>
              ) : (
                <Empty />
              )}
            </div>
          </div>
        </div>
      </MainLayout>
      ;
    </>
  );
};

export default Shop;
